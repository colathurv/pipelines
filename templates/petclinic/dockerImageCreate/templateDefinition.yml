resources:
  - name: {{ .Values.Resource1.name }}
    type: GitRepo
    configuration:
      path: {{ .Values.Resource1.path }}
      gitProvider: {{ .Values.Resource1.gitProvider }}
      files:
         # To ensure that only file changes in this sub-directoty triggers a run
        include: {{ .Values.Resource1.include }}
        
  - name: {{ .Values.Resource2.name }}
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.Artifactory }}
      buildName: {{ .Values.Resource2.name }}
      buildNumber: 1

pipelines:
  - name: {{ .Values.Pipelines.name }}
    steps:
      - name: {{ .Values.Step1.name }}
        type: MvnBuild
        configuration:
          sourceLocation: SUV-204-CI-CD-Deep-Dive:JFrog-Pipelines/java-backend
          mvnCommand: clean install -ntp
          resolverSnapshotRepo: libs-snapshot-virtual
          resolverReleaseRepo: libs-staging-virtual  
          deployerSnapshotRepo: libs-demo-snapshot-local
          deployerReleaseRepo: libs-demo-release-local
          inputResources:
            - name: demo_be_gitRepo
          integrations:
            - name: {{ .Values.Artifactory }}
          runtime:
            type: image
            image:
              auto:
                language: java
                versions:
                  - "11"
        execution:
          onStart:
            - javac -version
            - mvn --version

      - name: {{ .Values.Step2.name }}
        type: DockerBuild
        configuration:
          affinityGroup: bldGroup
          dockerFileLocation: SUV-204-CI-CD-Deep-Dive:JFrog-Pipelines/docker
          dockerFileName: BE-Dockerfile
          dockerImageName: vjnpipelines.jfrog.io/docker-template-local/app-backend
          dockerImageTag: '${run_number}'
          integrations:
            - name: {{ .Values.Artifactory }}
          inputResources:
            - name: demo_be_gitRepo
              trigger: false
          outputResources:
            - name: BackendServerDockerImage
          inputSteps:
            - name: bld_backend
        execution:
          onComplete:
            - echo $step_env_var2
            - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
      
      - name: {{ .Values.Step3.name }}
        type: DockerPush
        configuration:
          affinityGroup: bldGroup
          targetRepository: docker-template-local
          forceXrayScan: false
          autoPublishBuildInfo: true
          integrations:
            - name: GITHUB_INT
          inputSteps:
            - name: bld_docker_image
          outputResources:
            - name: demo_be_build_info
